import{m}from"./index-e8d895fc.js";let h;const g=new Uint8Array(16);function S(){if(!h&&(h=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!h))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return h(g)}const a=[];for(let e=0;e<256;++e)a.push((e+256).toString(16).slice(1));function D(e,t=0){return(a[e[t+0]]+a[e[t+1]]+a[e[t+2]]+a[e[t+3]]+"-"+a[e[t+4]]+a[e[t+5]]+"-"+a[e[t+6]]+a[e[t+7]]+"-"+a[e[t+8]]+a[e[t+9]]+"-"+a[e[t+10]]+a[e[t+11]]+a[e[t+12]]+a[e[t+13]]+a[e[t+14]]+a[e[t+15]]).toLowerCase()}const p=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),u={randomUUID:p};function y(e,t,s){if(u.randomUUID&&!t&&!e)return u.randomUUID();e=e||{};const o=e.random||(e.rng||S)();if(o[6]=o[6]&15|64,o[8]=o[8]&63|128,t){s=s||0;for(let r=0;r<16;++r)t[s+r]=o[r];return t}return D(o)}const d=60*60*24*7,K=({PrefixKey:e="",LocalStorage:t=localStorage}={})=>{const s=class{constructor(){this.LocalStorage=t,this.PrefixKey=e}StorageKey(o){return`${this.PrefixKey}${o}`.toUpperCase()}Set(o,r,n=d){const i=JSON.stringify({Value:r,Expire:n!==null?new Date().getTime()+n*1e3:null});this.LocalStorage.setItem(this.StorageKey(o),i)}Get(o,r=null){const n=this.LocalStorage.getItem(this.StorageKey(o));if(n)try{const i=JSON.parse(n),{Value:c,Expire:l}=i;if(l===null||l>=Date.now())return c;this.Remove(o)}catch{return r}return r}Remove(o){this.LocalStorage.removeItem(this.StorageKey(o))}Clear(){this.LocalStorage.clear()}SetCookie(o,r,n=d){document.cookie=`${this.StorageKey(o)}=${r}; Max-Age=${n}`}GetCookie(o){const r=document.cookie.split("; ");for(let n=0,i=r.length;n<i;n++){const c=r[n].split("=");if(c.length===2){const l=c[0],z=c[1];if(l===this.StorageKey(o))return z}}return""}RemoveCookie(o){this.SetCookie(o,1,-1)}ClearCookie(){const o=document.cookie.match(/[^ =;]+(?==)/g);if(o)for(let r=o.length;r--;)document.cookie=o[r]+"=0;expire="+new Date(0).toUTCString()}};return new s},P=K(),C=P.Get("LotteryPrizes")??[],L=P.Get("LotteryPersons")??[],f=P.Get("LotteryRecords")??[],R=P.Get("LotteryPool")??{Prizes:[],Persons:[]},U=m({id:"app-lottery",state:()=>({Prizes:C,Persons:L,Records:f,Pool:R}),getters:{TotalPrizeCount(){let e=0;const t=this.Prizes.length;for(let s=0;s<t;s++)e+=this.Prizes[s].Quantity;return e},TotalPersonCount(){return this.Persons.length},GetPrizePoolData:e=>t=>e.Prizes.some(s=>s.Key===t)?e.Prizes.find(s=>s.Key===t):null,PoolPersons(){var s;let e=[];const t=((s=this.Pool.Persons)==null?void 0:s.length)??0;for(let o=0;o<t;o++){const r=this.Pool.Persons[o];if(this.Persons.some(n=>n.Key===r)){const n=this.Persons.find(i=>i.Key===r);e.push(n.Name)}}return e},PoolPrizes(){var s;let e=[];const t=((s=this.Pool.Prizes)==null?void 0:s.length)??0;for(let o=0;o<t;o++){const r=this.Pool.Prizes[o];if(this.Prizes.some(n=>n.Key===r)){const n=this.Prizes.find(i=>i.Key===r);e.push(n.Name)}}return e}},actions:{SetPrize(e,t){this.Prizes.push({Key:y(),Name:e,Quantity:t,LastQuantity:t,Persons:[]}),P.Set("LotteryPrizes",this.Prizes)},DeletePrize(e){const t=this.Prizes.findIndex(s=>s.Key===e);this.Prizes.splice(t,1),P.Set("LotteryPrizes",this.Prizes)},SetPerson(e){this.Persons.push({Key:y(),Name:e}),P.Set("LotteryPersons",this.Persons)},DeletePerson(e){const t=this.Persons.findIndex(s=>s.Key===e);this.Persons.splice(t,1),P.Set("LotteryPersons",this.Persons)},SetPool(e,t){this.Pool.Prizes=e,this.Pool.Persons=t,P.Set("LotteryPool",this.Pool)},SetPoolPrizes(e){this.Pool.Prizes=e,P.Set("LotteryPool",this.Pool)},SetPoolPersons(e){this.Pool.Persons=e,P.Set("LotteryPool",this.Pool)},ExtractPrize(){const e=this.Prizes.filter(o=>o.LastQuantity>0),t=e.length,s=Math.floor(Math.random()*t);return e[s]},ExtractPerson(e){let t=[];if(this.Pool.Prizes.some(o=>o===e)){const o=this.Pool.Persons.length;for(let r=0;r<o;r++){const n=this.Pool.Persons[r];if(this.Persons.some(i=>i.Key===n)&&this.CheckExtractPerson(n)){const i=this.Persons.find(c=>c.Key===n);t.push({Key:i.Key,Name:i.Name})}}}else{const o=this.Persons.length;for(let r=0;r<o;r++){const n=this.Persons[r];this.Pool.Persons.some(i=>i===n.Key)===!1&&this.CheckExtractPerson(n.Key)&&t.push({Key:n.Key,Name:n.Name})}}const s=t.length;if(s>0){const o=Math.floor(Math.random()*s),r=t[o];return this.SetRecord(e,r.Key),this.UpdatePrizeQuantity(e),r}return null},CheckExtractPerson(e){return this.Records.some(t=>t.PersonKey===e)===!1},SetRecord(e,t){this.Records.push({PrizeKey:e,PersonKey:t}),P.Set("LotteryRecords",this.Records)},UpdatePrizeQuantity(e){if(this.Prizes.some(t=>t.Key===e)){const t=this.Prizes.find(s=>s.Key===e);t.LastQuantity-=1,P.Set("LotteryPrizes",this.Prizes)}},PersonPrize(e){let t="";if(this.Records.some(s=>s.PersonKey===e)){const s=this.Records.find(o=>o.PersonKey===e);this.Prizes.some(o=>o.Key===s.PrizeKey)&&(t=this.Prizes.find(r=>r.Key===s.PrizeKey).Name)}return t},RestRecord(){const e=this.Prizes.length;for(let t=0;t<e;t++){const s=this.Prizes[t];s.LastQuantity=s.Quantity}P.Set("LotteryPrizes",this.Prizes),this.Records=[],P.Set("LotteryRecords",this.Records)}}});export{U};
